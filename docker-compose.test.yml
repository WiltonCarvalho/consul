services:
  nginx:
    image: nginx:stable
    hostname: nginx
    entrypoint:
      - '/bin/sh'
      - '-c'
    command: 
      - |
        cat <<'EOF'> /etc/nginx/conf.d/default.conf
        server_tokens off;
        server {
          listen       80;
          server_name  _;
          location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            default_type text/plain;
            expires -1;
            return 200 '\nClient address: $$remote_addr $$http_x_forwarded_for\nServer address: $$server_addr:$$server_port\nServer name: $$hostname\nDate: $$time_local\nURI: $$request_uri\nRequest ID: $$request_id\n';
          }
          error_page 401 403 404 @40x;
          location @40x {
            default_type text/html;
            return 404 "<html>\n<head><title>Not Found!</title></head>\n<body>\n<center><h1>Not Found!</h1></center>\n</body>\n</html>\n";
          }
          error_page 500 502 503 504 @50x;
          location @50x {
            default_type text/html;
            return 500 "<html>\n<head><title>Internal Server Error!</title></head>\n<body>\n<center><h1>Internal Server Error!</h1></center>\n</body>\n</html>\n";
          }
        }
        EOF
        #exec tail -f /dev/null
        exec nginx -g 'daemon off;'
    environment:
      - update=3
      - TZ=America/Sao_Paulo
    ports:
      - 80:80
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.80'
          memory: 256M
        reservations:
          memory: 256M
    restart: unless-stopped
    network_mode: bridge
  proxy:
    container_name: proxy
    image: consul:1.10.4
    entrypoint:
      - '/bin/sh'
      - '-c'
    command:
      - |
        # #MY_IP=$$(ip route get 1 | awk '{print $$7;exit}')
        MY_IP=192.168.122.27
        cat <<EOF> /consul/config/nginx.hcl
        service {
          name = "nginx"
          id = "nginx-1"
          port = 80
          address = "$$MY_IP"
          check {
            id       = "nginx-check"
            http     = "http://$$MY_IP:80/"
            method   = "GET"
            interval = "1s"
            timeout  = "1s",
            DeregisterCriticalServiceAfter = "10m"
          }
        }
        EOF
        echo "Registering service with Consul"
        export CONSUL_HTTP_ADDR=https://172.17.0.1:8501
        export CONSUL_HTTP_SSL_VERIFY=false
        export CONSUL_HTTP_TOKEN=a45abcfb-3687-9b2c-e120-5c9ec62ea8db
        consul services register /consul/config/nginx.hcl
        #consul connect envoy -sidecar-for nginx-1
        tail -f /dev/null &
        pid="$$!"
        trap "echo 'Deregistering service with Consul' && consul services deregister /consul/config/nginx.hcl && exit 0 || exit 1" INT TERM
        #consul connect envoy -sidecar-for=${SERVICE_ID}
        #trap "echo 'Stopping PID $$pid'; kill -TERM $$pid && exit 0" SIGINT SIGTERM EXIT
        wait $$pid
    environment:
      update: 3
      TZ: America/Sao_Paulo
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.80'
          memory: 32M
        reservations:
          memory: 32M
    restart: unless-stopped
    network_mode: service:nginx
